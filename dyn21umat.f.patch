--- lsdyna_object_version_ref/dyn21umat.f	2020-06-24 18:43:36.000000000 +0200
+++ lsdyna_object_version/dyn21umat.f	2021-08-16 12:30:06.425213305 +0200
@@ -543,6 +543,7 @@
       integer*8 ptr_usrcf
       real*8, pointer,contiguous :: dm_x(:),dm_rots(:)
       real, pointer,contiguous :: dm_s_fibl(:),dm_s_uhat(:),dm_s_uthk(:)
+      include 'rve/daeblk.f'
 c
 c     data temps/nlq*0.0/
 c
@@ -1437,6 +1438,7 @@
         enddo
       endif
       endif
+      include "rve/dae_rve_2d.f"
 c
       if (iabs(ihyper(mt)).eq.4) then
          do i=lft,llt
@@ -2986,6 +2988,7 @@
       logical failel,failels(nlq),reject
       integer*8 lqfinv8,lqfmiv8
       real*8, pointer,contiguous :: dm_x(:)
+      include 'rve/daeblk.f'
 c     data temps/nlq*0.0/
 c
 c$omp threadprivate (/usermat_vendor/)
@@ -3006,6 +3009,49 @@
 c$omp threadprivate (/bux13loc/)
 c$omp threadprivate (/igamatloc/)
 c$omp threadprivate (/failcmloc/)
+
+      !!!!! DAE Jacobian !!!!!
+      ! !nodal ids and coordinates -> Jacobian (J=B@x) and its determinant
+      ! call getreal8ptr('dm_x',dm_x)
+      ! el = 1
+      ! node1=lqfinv(ix1(el),1) ! internal to external node id
+      ! node2=lqfinv(ix2(el),1) ! internal to external node id
+      ! node3=lqfinv(ix3(el),1) ! internal to external node id
+      ! node4=lqfinv(ix4(el),1) ! internal to external node id
+      ! node5=lqfinv(ix5(el),1) ! internal to external node id
+      ! node6=lqfinv(ix6(el),1) ! internal to external node id
+      ! node7=lqfinv(ix7(el),1) ! internal to external node id
+      ! node8=lqfinv(ix8(el),1) ! internal to external node id
+      ! ! Based on the comment on https://www.dynasupport.com/tutorial/ls-dyna-users-guide/elements
+      ! ! "Wedges and tetrahedra are simply degenerate bricks (i.e some of the nodes are repeated)"
+      ! ! if the element is solid and have maching nodes -> tet else hex
+      ! if (ix7(el)==ix8(el)) then
+      !       write(*,*) '                 tetrahedral element'
+      ! else
+      !       write(*,*) '                  hexahedral element'
+      ! endif
+      ! write(*,*) node1,node2,node3
+      ! write(*,*) node4,node5,node6
+      ! write(*,*) node7,node8
+      ! ! nodal coordinates
+      ! write(*,*) 'number of nodes', numnp
+      ! write(*,*) 'number of total dof', neq
+      ! write(*,*) 'dof per node', ndof
+      ! write(*,*) 'number of solid elements', numelh
+      ! write(*,*) 'nodal coor', dm_x(3*(ix1(el)-1)+1)
+      ! write(*,*) 'nodal coor', dm_x(3*(ix1(el)-1)+2)
+      ! write(*,*) 'nodal coor', dm_x(3*(ix1(el)-1)+3)
+      ! write(*,*) 'nodal coor', dm_x(3*(ix2(el)-1)+1)
+      ! write(*,*) 'nodal coor', dm_x(3*(ix2(el)-1)+2)
+      ! write(*,*) 'nodal coor', dm_x(3*(ix2(el)-1)+3)
+      ! ! write(*,*) 'nodal coor', xyz(1,ix1(el))
+      ! ! write(*,*) 'nodal coor', xyz(2,ix1(el))
+      ! ! write(*,*) 'nodal coor', xyz(3,ix1(el))
+      ! ! write(*,*) 'nodal coor', xyz(1,ix2(el))
+      ! ! write(*,*) 'nodal coor', xyz(2,ix2(el))
+      ! ! write(*,*) 'nodal coor', xyz(3,ix2(el))
+      !!!!! DAE end !!!!!
+
       capa=0.0
 c
 c     Processing elements
@@ -3947,6 +3993,7 @@
          endif
 c     End of scalar/vector umat switch
       endif
+      include "rve/dae_rve_3d.f"
 c
 c     Energy calculations
 c
